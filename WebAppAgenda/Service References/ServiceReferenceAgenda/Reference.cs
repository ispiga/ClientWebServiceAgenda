//------------------------------------------------------------------------------
// <auto-generated>
//     Este código fue generado por una herramienta.
//     Versión de runtime:4.0.30319.42000
//
//     Los cambios en este archivo podrían causar un comportamiento incorrecto y se perderán si
//     se vuelve a generar el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace WebAppAgenda.ServiceReferenceAgenda {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="MyAgenda", Namespace="http://schemas.datacontract.org/2004/07/")]
    [System.SerializableAttribute()]
    public partial class MyAgenda : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ApellidosField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CorreoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NombreField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TelefonoField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Apellidos {
            get {
                return this.ApellidosField;
            }
            set {
                if ((object.ReferenceEquals(this.ApellidosField, value) != true)) {
                    this.ApellidosField = value;
                    this.RaisePropertyChanged("Apellidos");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Correo {
            get {
                return this.CorreoField;
            }
            set {
                if ((object.ReferenceEquals(this.CorreoField, value) != true)) {
                    this.CorreoField = value;
                    this.RaisePropertyChanged("Correo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Nombre {
            get {
                return this.NombreField;
            }
            set {
                if ((object.ReferenceEquals(this.NombreField, value) != true)) {
                    this.NombreField = value;
                    this.RaisePropertyChanged("Nombre");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Telefono {
            get {
                return this.TelefonoField;
            }
            set {
                if ((object.ReferenceEquals(this.TelefonoField, value) != true)) {
                    this.TelefonoField = value;
                    this.RaisePropertyChanged("Telefono");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReferenceAgenda.IServiceMyAgenda")]
    public interface IServiceMyAgenda {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceMyAgenda/NuevoContacto", ReplyAction="http://tempuri.org/IServiceMyAgenda/NuevoContactoResponse")]
        int NuevoContacto(WebAppAgenda.ServiceReferenceAgenda.MyAgenda agenda);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceMyAgenda/NuevoContacto", ReplyAction="http://tempuri.org/IServiceMyAgenda/NuevoContactoResponse")]
        System.Threading.Tasks.Task<int> NuevoContactoAsync(WebAppAgenda.ServiceReferenceAgenda.MyAgenda agenda);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceMyAgenda/EditarContacto", ReplyAction="http://tempuri.org/IServiceMyAgenda/EditarContactoResponse")]
        int EditarContacto(WebAppAgenda.ServiceReferenceAgenda.MyAgenda agenda);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceMyAgenda/EditarContacto", ReplyAction="http://tempuri.org/IServiceMyAgenda/EditarContactoResponse")]
        System.Threading.Tasks.Task<int> EditarContactoAsync(WebAppAgenda.ServiceReferenceAgenda.MyAgenda agenda);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceMyAgenda/ElimirarContacto", ReplyAction="http://tempuri.org/IServiceMyAgenda/ElimirarContactoResponse")]
        int ElimirarContacto(int idContacto);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceMyAgenda/ElimirarContacto", ReplyAction="http://tempuri.org/IServiceMyAgenda/ElimirarContactoResponse")]
        System.Threading.Tasks.Task<int> ElimirarContactoAsync(int idContacto);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceMyAgenda/BuscarContacto", ReplyAction="http://tempuri.org/IServiceMyAgenda/BuscarContactoResponse")]
        WebAppAgenda.ServiceReferenceAgenda.MyAgenda BuscarContacto(int idContacto);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceMyAgenda/BuscarContacto", ReplyAction="http://tempuri.org/IServiceMyAgenda/BuscarContactoResponse")]
        System.Threading.Tasks.Task<WebAppAgenda.ServiceReferenceAgenda.MyAgenda> BuscarContactoAsync(int idContacto);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceMyAgenda/MostrarContactos", ReplyAction="http://tempuri.org/IServiceMyAgenda/MostrarContactosResponse")]
        WebAppAgenda.ServiceReferenceAgenda.MyAgenda[] MostrarContactos();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceMyAgenda/MostrarContactos", ReplyAction="http://tempuri.org/IServiceMyAgenda/MostrarContactosResponse")]
        System.Threading.Tasks.Task<WebAppAgenda.ServiceReferenceAgenda.MyAgenda[]> MostrarContactosAsync();
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IServiceMyAgendaChannel : WebAppAgenda.ServiceReferenceAgenda.IServiceMyAgenda, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ServiceMyAgendaClient : System.ServiceModel.ClientBase<WebAppAgenda.ServiceReferenceAgenda.IServiceMyAgenda>, WebAppAgenda.ServiceReferenceAgenda.IServiceMyAgenda {
        
        public ServiceMyAgendaClient() {
        }
        
        public ServiceMyAgendaClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ServiceMyAgendaClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ServiceMyAgendaClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ServiceMyAgendaClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public int NuevoContacto(WebAppAgenda.ServiceReferenceAgenda.MyAgenda agenda) {
            return base.Channel.NuevoContacto(agenda);
        }
        
        public System.Threading.Tasks.Task<int> NuevoContactoAsync(WebAppAgenda.ServiceReferenceAgenda.MyAgenda agenda) {
            return base.Channel.NuevoContactoAsync(agenda);
        }
        
        public int EditarContacto(WebAppAgenda.ServiceReferenceAgenda.MyAgenda agenda) {
            return base.Channel.EditarContacto(agenda);
        }
        
        public System.Threading.Tasks.Task<int> EditarContactoAsync(WebAppAgenda.ServiceReferenceAgenda.MyAgenda agenda) {
            return base.Channel.EditarContactoAsync(agenda);
        }
        
        public int ElimirarContacto(int idContacto) {
            return base.Channel.ElimirarContacto(idContacto);
        }
        
        public System.Threading.Tasks.Task<int> ElimirarContactoAsync(int idContacto) {
            return base.Channel.ElimirarContactoAsync(idContacto);
        }
        
        public WebAppAgenda.ServiceReferenceAgenda.MyAgenda BuscarContacto(int idContacto) {
            return base.Channel.BuscarContacto(idContacto);
        }
        
        public System.Threading.Tasks.Task<WebAppAgenda.ServiceReferenceAgenda.MyAgenda> BuscarContactoAsync(int idContacto) {
            return base.Channel.BuscarContactoAsync(idContacto);
        }
        
        public WebAppAgenda.ServiceReferenceAgenda.MyAgenda[] MostrarContactos() {
            return base.Channel.MostrarContactos();
        }
        
        public System.Threading.Tasks.Task<WebAppAgenda.ServiceReferenceAgenda.MyAgenda[]> MostrarContactosAsync() {
            return base.Channel.MostrarContactosAsync();
        }
    }
}
